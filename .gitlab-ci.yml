stages:
  - build
  - test
  - publish

#--------------------------
# Build templates
#--------------------------

.build-template: &build-template_definition
  stage: build
  script:
    - ci/fedora-packages.sh
    - ci/common-rpm-build.sh
    - mkdir ${CI_JOB_NAME}
    - cp -rv build/RPMS build/SRPMS ${CI_JOB_NAME}
    - tree ${CI_JOB_NAME}
  variables:
    BRANCH: ${CI_COMMIT_REF_NAME}
  artifacts:
    paths:
      - "$CI_JOB_NAME"

#--------------------------
# Build jobs
#--------------------------

cc7:
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  before_script:
    - if [[ -z "$CI_COMMIT_TAG" ]]; then export RPMBUILD_FLAGS="--without docs" ; fi
  <<: *build-template_definition

centos8:
  image: gitlab-registry.cern.ch/linuxsupport/c8-base
  <<: *build-template_definition

fedora-33:
  image: fedora:33
  <<: *build-template_definition

fedora-34:
  image: fedora:34
  <<: *build-template_definition

fedora-rawhide:
  image: fedora:rawhide
  <<: *build-template_definition
  allow_failure: true
  when: manual

#--------------------------
# Test templates
#--------------------------

.test-template: &test-template_definition
  stage: test
  script:
    - dnf install -y git
    - ci/fetch-repo-files.sh
    - declare -A DISTMAP=( [cc7]=el7 [centos8]=el8 [fedora-33]=fc33 [fedora-34]=fc34 )
    - PLATFORM=${CI_JOB_NAME%-*}
    - DIST=${DISTMAP[${PLATFORM}]}
    - if [[ -z "$CI_COMMIT_TAG" ]]; then BUILD="devel" ; else BUILD="rc" ; fi
    - cp -v ci/repo/${BUILD}/dmc-${BUILD}-${DIST}.repo /etc/yum.repos.d/
    - dnf install -y ${PLATFORM}/RPMS/*/*.rpm
    - shopt -s expand_aliases
    - python --version &>/dev/null || alias python=python3
    - python test/unit/creat_instance_all.py

#--------------------------
# Test jobs
#--------------------------

cc7-test:
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  dependencies:
    - cc7
  before_script:
    - yum install -y dnf epel-release
  <<: *test-template_definition

centos8-test:
  image: gitlab-registry.cern.ch/linuxsupport/c8-base
  dependencies:
    - centos8
  before_script:
    - dnf install -y epel-release
  <<: *test-template_definition

fedora-33-test:
  image: fedora:33
  dependencies:
    - fedora-33
  <<: *test-template_definition

fedora-34-test:
  image: fedora:34
  dependencies:
    - fedora-34
  <<: *test-template_definition

#--------------------------
# Publish templates
#--------------------------

.publish-template: &publish-template_definition
  stage: publish
  image: gitlab-registry.cern.ch/eos/gitlab-eos/cc7:latest
  dependencies:
    - cc7
    - centos8
    - fedora-33
    - fedora-34
    - fedora-rawhide
  script:
    - yum install -y python sssd-client sudo createrepo
    - automount
    - cat "$repo_passwd" | kinit "$repo_user"
    - eosfusebind
    - |
        for platform in cc7 centos8 fedora-33 fedora-34 fedora-rawhide; do
          if [[ "${platform}" == "fedora-rawhide" ]] && [[ ! -d ${platform} ]] ; then
            echo "Skipping ${platform} packages..." ;
            continue ;
          fi
          packaging/gfal2-repo-manager.py --action add --base /eos/project/d/dmc/www/repos/ --ref ${CI_COMMIT_REF_NAME} --packages ${platform}/RPMS/*/*.rpm ${platform}/SRPMS/*
        done
    - sleep 60
  tags:
    - docker-privileged
  retry: 2

#--------------------------
# Publish jobs
#--------------------------

rpms:
  <<: *publish-template_definition
  rules:
    - if: '$CI_COMMIT_REF_NAME == "develop" || $CI_COMMIT_TAG != null'

testing-rpms:
  <<: *publish-template_definition
  rules:
    - if: '$CI_COMMIT_REF_NAME != "develop" && $CI_COMMIT_TAG == null'
      when: manual

publish-production:
  stage: publish
  image: gitlab-registry.cern.ch/eos/gitlab-eos/cc7:latest
  script: 
    - yum install -y python sssd-client sudo createrepo
    - automount
    - cat "$repo_passwd" | kinit "$repo_user"
    - eosfusebind
    - packaging/syncrepo --base-origin /eos/project/d/dmc/www/repos/rc --base-dest /eos/project/d/dmc/www/repos/ '*.rpm'
    - sleep 60
  tags:
    - docker-privileged
  retry: 2
  rules:
    - if: $CI_COMMIT_TAG != null
      when: manual
